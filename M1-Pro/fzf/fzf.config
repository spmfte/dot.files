# ~/.fzf.conf

# Set default options for fzf
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
  --color=fg:-1,fg+:#d0d0d0,bg:-1,bg+:#262626
  --color=hl:#5f87af,hl+:#5fd7ff,info:#afaf87,marker:#87ff00
  --color=prompt:#d7005f,spinner:#af5fff,pointer:#af5fff,header:#87afaf
  --color=border:#262626,label:#aeaeae,query:#d9d9d9
  --border=rounded --border-label=Search --border-label-pos=0 --preview-window=border-rounded
  --padding=1 --margin=1 --prompt="♥︎ " --marker="➤"
  --pointer="→" --separator="─" --scrollbar="│"
  --preview="bat --style=numbers --color=always --line-range=:500 {}"'

# Full-screen layout
export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --layout=reverse --height=100%"

# Set default command to use ripgrep for searching files
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

# Customize key bindings
export FZF_CTRL_T_OPTS="--preview 'head -n 100 {}'"
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -n 100'"

# Tmux integration
export FZF_TMUX_OPTS='-d 40%'
alias fzf-tmux='fzf-tmux -p 80%,60%'

# Aliases
alias fzf_find='fzf --layout=reverse --border'
alias fzf_git_files='fzf --preview="git diff --color=always {} | head -200"'
alias fzf_cd='cd $(fzf)'

# Functions
fzo() {
  local file
  file=$(fzf --preview="bat --style=numbers --color=always --line-range=:500 {}")
  [ -n "$file" ] && nvim "$file"
}

fzf_git_checkout() {
  local branches
  branches=$(git branch | sed "s/ //g" | fzf --height 40% --layout=reverse --border)
  [ -n "$branches" ] && git checkout "$branches"
}

fzf_git_log() {
  local commits
  commits=$(git log --oneline --graph --color=always | fzf --height 40% --layout=reverse --border)
  [ -n "$commits" ] && git show $(echo "$commits" | awk '{print $1}')
}

fzf_git_diff() {
  local files
  files=$(git diff --name-only | fzf --height 40% --layout=reverse --border)
  [ -n "$files" ] && git diff --color=always "$files" | less -R
}

fzr() {
  local file
  file=$(cat ~/.local/share/nvim/session/*.vim | grep "edit " | sed 's/edit //' | fzf --height 40% --layout=reverse --border)
  [ -n "$file" ] && nvim "$file"
}

fzh() {
  local command
  command=$(history | fzf --height 40% --layout=reverse --border --preview="echo {}" --preview-window=down:3:wrap)
  eval $command
}

fzssh() {
  local host
  host=$(cat ~/.ssh/config | grep "Host " | awk '{print $2}' | fzf --height 40% --layout=reverse --border)
  [ -n "$host" ] && ssh "$host"
}

fzgir() {
  local commits
  commits=$(git log --oneline | fzf --height 40% --layout=reverse --border --multi)
  [ -n "$commits" ] && git rebase -i "$(echo "$commits" | tail -1 | awk '{print $1}')^"
}

fzvimbuf() {
  local buf
  buf=$(nvim --server ~/.config/nvim/.nvim-server --remote-expr "join(map(filter(range(1, bufnr('$')), 'buflisted(v:val)'), 'bufname(v:val)'),\"\n\")" | fzf --height 40% --layout=reverse --border)
  [ -n "$buf" ] && nvim --server ~/.config/nvim/.nvim-server --remote "$buf"
}

fzkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf --height 40% --layout=reverse --border --header="Select a process to kill" | awk '{print $2}')
  [ -n "$pid" ] && kill -9 "$pid"
}

fzman() {
  local cmd
  cmd=$(man -k . | fzf --height 40% --layout=reverse --border | awk '{print $1}')
  [ -n "$cmd" ] && man "$cmd"
}

